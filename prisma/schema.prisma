generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:.dev.db"
}

model Student {
  id                Int       @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String
  totalClasses      Int
  classesAttended   Int
  attendance        Int
  gradesObtained    Grade[]
  enrolledInCourse  Course[]
  lectures StudentOnLecture[]
}

model Staff {
  id             Int       @id @default(autoincrement())
  firstName      String
  lastName       String
  email          String
  isAdmin        Boolean
  isTeacher      Boolean
  teachesLecture Lecture[]
}

model ClassRoom {
  roomNum     String    @id
  building    String
  hasLectures Lecture[]
}

model Lecture {
  id          String    @id
  lectureName String
  dateTime    String 
  room        String
  occursIn    ClassRoom @relation(fields: [room], references: [roomNum])
  teacherID   Int
  taughtBy    Staff     @relation(fields: [teacherID], references: [id])
  courseID    String
  forCourse   Course    @relation(fields: [courseID], references: [courseID])
  lectureCode Int       @default(0000)
  hasStarted  Boolean   @default(false)  
  students    StudentOnLecture[]
}

model StudentOnLecture {
  student Student @relation(fields: [studentID], references: [id])
  studentID Int 
  lecture Lecture @relation(fields: [lectureID], references: [id])
  lectureID String
  attended Boolean

  @@id([studentID, lectureID])
}

model Course {
  courseID         String    @id
  courseName       String
  teacherID        Int
  hasAssessments   Grade[]
  hasLectures      Lecture[]
  enrolledStudents Student[]
}

model Grade {
  gradeID        String  @id
  returnDate     String
  assessmentName String
  gradePercent   Int
  studentID      Int
  courseID       String
  course         Course  @relation(fields: [courseID], references: [courseID])
  student        Student @relation(fields: [studentID], references: [id])


}
